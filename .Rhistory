library(haven)
install.packages("haven")
library(haven)
library(dplyr)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("summarytools")
library(haven)
library(dplyr)
library(ggplot2)
library(summarytools)
library(haven)
library(dplyr)
library(ggplot2)
library(summarytools)
library(haven)
library(dplyr)
library(ggplot2)
library(summarytools)
library(haven)
library(dplyr)
library(ggplot2)
data <- read_dta("karlan_list_2007.dta")
str(data)
dim(data)
treated <- filter(data, treatment == 1)
control <- filter(data, treatment == 0)
mean_treat <- mean(treated$mrm2, na.rm = TRUE)
mean_control <- mean(control$mrm2, na.rm = TRUE)
sd_treat <- sd(treated$mrm2, na.rm = TRUE)
sd_control <- sd(control$mrm2, na.rm = TRUE)
n_treat <- sum(!is.na(treated$mrm2))
n_control <- sum(!is.na(control$mrm2))
t_stat <- (mean_treat - mean_control) / sqrt((sd_treat^2 / n_treat) + (sd_control^2 / n_control))
t_stat
lm_balance <- lm(mrm2 ~ treatment, data = data)
summary(lm_balance)
library(haven)
library(dplyr)
library(ggplot2)
data <- read_dta("karlan_list_2007.dta")
data
treated <- filter(data, treatment == 1)
control <- filter(data, treatment == 0)
mean_treat <- mean(treated$mrm2, na.rm = TRUE)
mean_control <- mean(control$mrm2, na.rm = TRUE)
sd_treat <- sd(treated$mrm2, na.rm = TRUE)
sd_control <- sd(control$mrm2, na.rm = TRUE)
n_treat <- sum(!is.na(treated$mrm2))
n_control <- sum(!is.na(control$mrm2))
t_stat <- (mean_treat - mean_control) / sqrt((sd_treat^2 / n_treat) + (sd_control^2 / n_control))
t_stat
lm_balance <- lm(mrm2 ~ treatment, data = data)
summary(lm_balance)
# female variable
mean_female_treat <- mean(treated$female, na.rm = TRUE)
mean_female_control <- mean(control$female, na.rm = TRUE)
sd_female_treat <- sd(treated$female, na.rm = TRUE)
sd_female_control <- sd(control$female, na.rm = TRUE)
n_female_treat <- sum(!is.na(treated$female))
n_female_control <- sum(!is.na(control$female))
t_female <- (mean_female_treat - mean_female_control) /
sqrt((sd_female_treat^2 / n_female_treat) + (sd_female_control^2 / n_female_control))
t_female
summary(lm(female ~ treatment, data = data))
# freq variable
mean_freq_treat <- mean(treated$freq, na.rm = TRUE)
mean_freq_control <- mean(control$freq, na.rm = TRUE)
sd_freq_treat <- sd(treated$freq, na.rm = TRUE)
sd_freq_control <- sd(control$freq, na.rm = TRUE)
n_freq_treat <- sum(!is.na(treated$freq))
n_freq_control <- sum(!is.na(control$freq))
t_freq <- (mean_freq_treat - mean_freq_control) /
sqrt((sd_freq_treat^2 / n_freq_treat) + (sd_freq_control^2 / n_freq_control))
t_freq
summary(lm(freq ~ treatment, data = data))
donate_rate <- data %>%
group_by(treatment) %>%
summarise(rate = mean(gave, na.rm = TRUE)) %>%
mutate(treatment = ifelse(treatment == 1, "Treatment", "Control"))
ggplot(donate_rate, aes(x = treatment, y = rate, fill = treatment)) +
geom_bar(stat = "identity", width = 0.6) +
labs(title = "Proportion of People Who Donated",
x = "Group",
y = "Donation Rate") +
theme_minimal() +
theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))
# Manual t-test using the class formula
mean_gave_treat <- mean(treated$gave, na.rm = TRUE)
mean_gave_control <- mean(control$gave, na.rm = TRUE)
sd_gave_treat <- sd(treated$gave, na.rm = TRUE)
sd_gave_control <- sd(control$gave, na.rm = TRUE)
n_gave_treat <- sum(!is.na(treated$gave))
n_gave_control <- sum(!is.na(control$gave))
t_stat_gave <- (mean_gave_treat - mean_gave_control) /
sqrt((sd_gave_treat^2 / n_gave_treat) + (sd_gave_control^2 / n_gave_control))
t_stat_gave
# Regression: Gave ~ Treatment
lm_gave <- lm(gave ~ treatment, data = data)
summary(lm_gave)
# t-test using formula
mean_gave_treat <- mean(treated$gave, na.rm = TRUE)
mean_gave_control <- mean(control$gave, na.rm = TRUE)
sd_gave_treat <- sd(treated$gave, na.rm = TRUE)
sd_gave_control <- sd(control$gave, na.rm = TRUE)
n_gave_treat <- sum(!is.na(treated$gave))
n_gave_control <- sum(!is.na(control$gave))
t_stat_gave <- (mean_gave_treat - mean_gave_control) /
sqrt((sd_gave_treat^2 / n_gave_treat) + (sd_gave_control^2 / n_gave_control))
t_stat_gave
# regression
lm_gave <- lm(gave ~ treatment, data = data)
summary(lm_gave)
# Probit regression: donation decision ~ treatment group
probit_model <- glm(gave ~ treatment, data = data, family = binomial(link = "probit"))
summary(probit_model)
# Subset data to just treated people with a match offer
match_data <- data %>% filter(treatment == 1)
# Subset into 3 groups by match ratio
group_1_1 <- match_data %>% filter(ratio == 1)
group_2_1 <- match_data %>% filter(ratio == 2)
group_3_1 <- match_data %>% filter(ratio == 3)
# Mean donation rates
mean(group_1_1$gave, na.rm = TRUE)
mean(group_2_1$gave, na.rm = TRUE)
mean(group_3_1$gave, na.rm = TRUE)
# T-test: 2:1 vs 1:1
t.test(group_2_1$gave, group_1_1$gave)
# T-test: 3:1 vs 2:1
t.test(group_3_1$gave, group_2_1$gave)
# Create ratio1 dummy: 1 if ratio == 1, else 0
data$ratio1 <- ifelse(data$ratio == 1, 1, 0)
# Only include treated group (people who received any match offer)
match_only <- filter(data, treatment == 1)
# Run regression on 3 dummy variables: ratio1, ratio2, ratio3
lm_ratio <- lm(gave ~ ratio1 + ratio2 + ratio3, data = match_only)
summary(lm_ratio)
mean_1_1 <- mean(group_1_1$gave, na.rm = TRUE)
mean_2_1 <- mean(group_2_1$gave, na.rm = TRUE)
mean_3_1 <- mean(group_3_1$gave, na.rm = TRUE)
diff_2_1_vs_1_1 <- mean_2_1 - mean_1_1
diff_3_1_vs_2_1 <- mean_3_1 - mean_2_1
diff_2_1_vs_1_1
diff_3_1_vs_2_1
# Compare average donation amount (includes 0s for non-donors)
mean_amount_treat <- mean(treated$amount, na.rm = TRUE)
mean_amount_control <- mean(control$amount, na.rm = TRUE)
mean_amount_treat
mean_amount_control
# T-test
t.test(treated$amount, control$amount)
# Regression: amount ~ treatment
lm_amount <- lm(amount ~ treatment, data = data)
summary(lm_amount)
# Filter to only include donors (positive donation amount)
donors_only <- filter(data, gave == 1)
# Regression: amount ~ treatment, among donors only
lm_donor_amount <- lm(amount ~ treatment, data = donors_only)
summary(lm_donor_amount)
# Filter to only include donors (positive donation amount)
donors_only <- filter(data, gave == 1)
# Regression: amount ~ treatment, among donors only
lm_donor_amount <- lm(amount ~ treatment, data = donors_only)
summary(lm_donor_amount)
donors <- filter(data, gave == 1)
mean_treat <- mean(donors$amount[donors$treatment == 1], na.rm = TRUE)
mean_control <- mean(donors$amount[donors$treatment == 0], na.rm = TRUE)
# Plot for treatment group
ggplot(filter(donors, treatment == 1), aes(x = amount)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "white") +
geom_vline(xintercept = mean_treat, color = "red", linetype = "dashed", size = 1) +
labs(title = "Treatment Group: Donation Amounts",
x = "Donation Amount",
y = "Number of Donors") +
theme_minimal()
# Plot for control group
ggplot(filter(donors, treatment == 0), aes(x = amount)) +
geom_histogram(binwidth = 5, fill = "lightgray", color = "white") +
geom_vline(xintercept = mean_control, color = "red", linetype = "dashed", size = 1) +
labs(title = "Control Group: Donation Amounts",
x = "Donation Amount",
y = "Number of Donors") +
theme_minimal()
install.packages("margins")
library(margins)
# Probit model
probit_model <- glm(gave ~ treatment, data = data, family = binomial(link = "probit"))
# Marginal effects
margins_model <- margins(probit_model)
summary(margins_model)
set.seed(42)
# Simulate 10,000 draws from control and treatment (Bernoulli trials)
control_sim <- rbinom(10000, 1, 0.018)
treat_sim <- rbinom(10000, 1, 0.022)
# Difference at each iteration
diffs <- treat_sim - control_sim
# Cumulative average
cum_avg <- cumsum(diffs) / seq_along(diffs)
# True difference in means
true_diff <- 0.022 - 0.018
# Plot
plot(cum_avg, type = "l", col = "steelblue", lwd = 2,
main = "Law of Large Numbers: Cumulative Difference in Means",
xlab = "Number of Simulations", ylab = "Cumulative Average Difference")
abline(h = true_diff, col = "red", lty = 2, lwd = 2)
legend("topright", legend = c("Cumulative Avg", "True Difference"),
col = c("steelblue", "red"), lty = c(1, 2), lwd = 2)
set.seed(123)
# Function to simulate sampling distribution of differences
simulate_diff_means <- function(n, reps = 1000, p_control = 0.018, p_treatment = 0.022) {
replicate(reps, {
control <- rbinom(n, 1, p_control)
treatment <- rbinom(n, 1, p_treatment)
mean(treatment) - mean(control)
})
}
# Sample sizes
sizes <- c(50, 200, 500, 1000)
# Run simulation for each sample size
diffs_50 <- simulate_diff_means(50)
diffs_200 <- simulate_diff_means(200)
diffs_500 <- simulate_diff_means(500)
diffs_1000 <- simulate_diff_means(1000)
# Plot function
plot_hist <- function(diffs, n) {
hist(diffs, breaks = 30, col = "lightblue", border = "white",
main = paste("Sample Size =", n),
xlab = "Average Difference in Donation Rates")
abline(v = mean(diffs), col = "red", lwd = 2, lty = 2)
}
# 4 separate plots
par(mfrow = c(2, 2))  # 2x2 layout
plot_hist(diffs_50, 50)
plot_hist(diffs_200, 200)
plot_hist(diffs_500, 500)
plot_hist(diffs_1000, 1000)
par(mfrow = c(1, 1))  # Reset layout
set.seed(123)
# Function to simulate sampling distribution of differences
simulate_diff_means <- function(n, reps = 1000, p_control = 0.018, p_treatment = 0.022) {
replicate(reps, {
control <- rbinom(n, 1, p_control)
treatment <- rbinom(n, 1, p_treatment)
mean(treatment) - mean(control)
})
}
sizes <- c(50, 200, 500, 1000)
# Run simulation for each sample size
diffs_50 <- simulate_diff_means(50)
diffs_200 <- simulate_diff_means(200)
diffs_500 <- simulate_diff_means(500)
diffs_1000 <- simulate_diff_means(1000)
plot_hist <- function(diffs, n) {
hist(diffs, breaks = 30, col = "lightblue", border = "white",
main = paste("Sample Size =", n),
xlab = "Average Difference in Donation Rates")
abline(v = mean(diffs), col = "red", lwd = 2, lty = 2)
}
par(mfrow = c(2, 2))
plot_hist(diffs_50, 50)
plot_hist(diffs_200, 200)
plot_hist(diffs_500, 500)
plot_hist(diffs_1000, 1000)
par(mfrow = c(1, 1))
library(haven)
library(dplyr)
library(ggplot2)
data <- read_dta("karlan_list_2007.dta")
data
library(haven)
library(dplyr)
library(ggplot2)
data <- read_dta("karlan_list_2007.dta")
data
